name: BubbleScan Release

on:
  push:
    branches:
      - main
      - macos_certificate
  workflow_dispatch:
    
jobs:
  build-windows:
    runs-on: windows-latest

    permissions:
      contents: write  

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Run BubbleScan script
        shell: bash
        run: ./BubbleScan.sh

      - name: List files in ServerCode/dist after running BubbleScan.sh
        run: ls -l ServerCode/dist || echo "ServerCode/dist not found"

      - name: Verify BubbleScan exists
        shell: bash
        run: |
          if [ -f "ServerCode/dist/BubbleScan-Windows.exe" ]; then
              echo "BubbleScan found in ServerCode/dist."
          else
              echo "BubbleScan not found in ServerCode/dist."
              exit 1
          fi

      - name: Zip files for release
        run: |
          Compress-Archive -Path ServerCode/dist/BubbleScan-Windows.exe, ServerCode/dist/static -DestinationPath ServerCode/dist/BubbleScan.zip
        shell: powershell
        
      - name: Create a new Git tag
        id: create_tag
        shell: powershell
        run: |
          $TAG = "v$(Get-Date -Format 'yyyyMMddHHmmss')-Windows"
          echo "TAG=$TAG" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "::set-output name=TAG::$TAG"
          git tag $TAG
          git push origin $TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ServerCode/dist/Bubblescan.zip
          tag_name: ${{ steps.create_tag.outputs.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-latest

    permissions:
      contents: write  

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Set executable permissions for BubbleScan.sh
        run: chmod +x BubbleScanMac.sh

      - name: Run BubbleScan script
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        shell: bash
        run: ./BubbleScanMac.sh

      - name: List files in ServerCode/dist after running BubbleScan.sh
        run: ls -l ServerCode/dist || echo "ServerCode/dist not found"

      - name: Verify BubbleScan exists
        shell: bash
        run: |
          if [ -d "ServerCode/dist/BubbleScan-macOS.app" ]; then
              echo "BubbleScan found in ServerCode/dist."
          else
              echo "BubbleScan not found in ServerCode/dist."
              exit 1
          fi

      - name: Codesign executable (again)
        run: |
          security unlock-keychain -p actions build.keychain
          security set-keychain-settings -lut 3600 build.keychain
          security set-key-partition-list \
               -S apple-tool:,apple: \
               -s -k actions build.keychain
          codesign --force --deep \
               --sign "Developer ID Application: Ekaterina Holdener (V4Q7X7HV6L)" \
               --options=runtime --timestamp \
               ServerCode/dist/BubbleScan-MacOS.app/Contents/MacOS/BubbleScan-macOS
 
      - name: notarize the app
        env:
           PASSWORD: ${{ secrets.BUBBLE_SCAN_APPLE_PASSWORD }}
           APPLE_ID: ${{ secrets.APPLE_ID }}
           TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          ditto -c -k --keepParent ServerCode/dist/BubbleScan-macOS.app ServerCode/dist/BubbleScan-macOS.app.zip
          xcrun notarytool submit ServerCode/dist/BubbleScan-macOS.app.zip --apple-id "$APPLE_ID" --team-id "$TEAM_ID" --password "$PASSWORD" --wait
          xcrun stapler staple ServerCode/dist/BubbleScan-macOS.app

      - name: Zip files for release
        shell: bash
        run: |
          zip -r ServerCode/dist/BubbleScan-macOS.zip ServerCode/dist/BubbleScan-macOS.app

      - name: Create a new Git tag for macOS
        id: create_tag
        shell: bash
        run: |
          TAG="v$(date +'%Y%m%d%H%M%S')-macOS"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "::set-output name=TAG::$TAG"
          git tag $TAG
          git push origin $TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Upload macOS binary to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ServerCode/dist/BubbleScan-macOS.zip
          tag_name: ${{ steps.create_tag.outputs.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
