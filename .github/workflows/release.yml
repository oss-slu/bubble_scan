name: BubbleScan Release

on:
  push:
    branches:
      - AutomateWorkflow109 #change branch to main after testing

jobs:
  build-windows:
    runs-on: windows-latest

    permissions:
      contents: write  

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Run BubbleScan script
        shell: bash
        run: ./BubbleScan.sh

      - name: List files in ServerCode/dist after running BubbleScan.sh
        run: ls -l ServerCode/dist || echo "ServerCode/dist not found"

      - name: Verify BubbleScan exists
        shell: bash
        run: |
          if [ -f "ServerCode/dist/BubbleScan-Windows.exe" ]; then
              echo "BubbleScan found in ServerCode/dist."
          else
              echo "BubbleScan not found in ServerCode/dist."
              exit 1
          fi

      - name: Zip files for release
        run: |
          Compress-Archive -Path ServerCode/dist/BubbleScan-Windows.exe, ServerCode/dist/static -DestinationPath ServerCode/dist/BubbleScan.zip
        shell: powershell
        
      - name: Create a new Git tag with incremental versioning for Windows
        id: create_tag
        shell: powershell
        run: |
          # Fetch all tags from the repository
          git fetch --tags

          # Get the latest tag, if it exists
          try {
              $LatestTag = git describe --tags --abbrev=0 2>$null
          } catch {
              $LatestTag = $null
          }

          if (-not $LatestTag) {
              # No tags exist; start with v1.0.0
              $NewTag = "v1.0.0-Windows"
          } else {
              # Extract the version numbers
              if ($LatestTag -match "v(\d+)\.(\d+)\.(\d+)-Windows") {
                  $Major = [int]$matches[1]
                  $Minor = [int]$matches[2]
                  $Patch = [int]$matches[3]
                  # Increment the patch version
                  $Patch++
                  $NewTag = "v$Major.$Minor.$Patch-Windows"
              } else {
                  throw "Unable to parse version from latest tag: $LatestTag"
              }
          }

          # Output the new tag
          echo "New tag: $NewTag"
          echo "TAG=$NewTag" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "::set-output name=TAG::$NewTag"

          # Create and push the new tag
          git tag $NewTag
          git push origin $NewTag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ServerCode/dist/Bubblescan.zip
          tag_name: ${{ steps.create_tag.outputs.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-latest

    permissions:
      contents: write  

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Set executable permissions for BubbleScan.sh
        run: chmod +x BubbleScan.sh

      - name: Run BubbleScan script
        shell: bash
        run: ./BubbleScan.sh

      - name: List files in ServerCode/dist after running BubbleScan.sh
        run: ls -l ServerCode/dist || echo "ServerCode/dist not found"

      - name: Verify BubbleScan exists
        shell: bash
        run: |
          if [ -f "ServerCode/dist/BubbleScan-macOS" ]; then
              echo "BubbleScan found in ServerCode/dist."
          else
              echo "BubbleScan not found in ServerCode/dist."
              exit 1
          fi

      - name: Zip files for release
        shell: bash
        run: |
          zip -r ServerCode/dist/BubbleScan.zip ServerCode/dist/BubbleScan-macOS ServerCode/dist/static

      - name: Create a new Git tag with incremental versioning for macOS
        id: create_tag
        shell: bash
        run: |
          # Fetch all tags from the repository
          git fetch --tags

          # Initialize the base version
          BASE_TAG="v1.0.0-macOS"

          # Get the highest existing tag for macOS
          HIGHEST_TAG=$(git tag --list 'v*-macOS' | sort -V | tail -n 1)

          if [[ -z "$HIGHEST_TAG" ]]; then
              # If no tags exist, start with the base tag
              NEW_TAG="$BASE_TAG"
          else
              # Extract the version numbers
              MAJOR=$(echo "$HIGHEST_TAG" | sed -E 's/v([0-9]+)\..*/\1/')
              MINOR=$(echo "$HIGHEST_TAG" | sed -E 's/v[0-9]+\.([0-9]+)\..*/\1/')
              PATCH=$(echo "$HIGHEST_TAG" | sed -E 's/v[0-9]+\.[0-9]+\.([0-9]+)-macOS/\1/')

              # Increment the patch version
              PATCH=$((PATCH + 1))

              # Generate the new tag
              NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}-macOS"
          fi

          # Output the new tag
          echo "New tag: $NEW_TAG"
          echo "TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "::set-output name=TAG::$NEW_TAG"

          # Create and push the new tag
          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"


      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ServerCode/dist/BubbleScan.zip
          tag_name: ${{ steps.create_tag.outputs.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
